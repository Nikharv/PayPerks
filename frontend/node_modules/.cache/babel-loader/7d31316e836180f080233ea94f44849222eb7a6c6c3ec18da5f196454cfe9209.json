{"ast":null,"code":"var _jsxFileName = \"/Users/nikharvdomadiya/Downloads/untitled folder/PayPerks/frontend/src/pages/ResetPasswordPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../css/ResetPasswordPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPasswordPage() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    newPassword: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isFormValid, setIsFormValid] = useState(false);\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.newPassword) {\n      newErrors.newPassword = 'New password is required';\n    } else if (formData.newPassword.length < 6) {\n      newErrors.newPassword = 'Password must be at least 6 characters';\n    }\n    if (!formData.confirmPassword) {\n      newErrors.confirmPassword = 'Please confirm your password';\n    } else if (formData.newPassword !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Passwords do not match';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  useEffect(() => {\n    setIsFormValid(validateForm());\n  }, [formData]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      // TODO: Add password reset logic here\n      navigate('/login');\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"newPassword\",\n            placeholder: \"New Password\",\n            value: formData.newPassword,\n            onChange: handleChange,\n            className: errors.newPassword ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), errors.newPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errors.newPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"confirmPassword\",\n            placeholder: \"Confirm New Password\",\n            value: formData.confirmPassword,\n            onChange: handleChange,\n            className: errors.confirmPassword ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errors.confirmPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"reset-password-button\",\n          disabled: !isFormValid,\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPasswordPage, \"hguhpIbH4suHAWY+HY06v5VgPuo=\", false, function () {\n  return [useNavigate];\n});\n_c = ResetPasswordPage;\nexport default ResetPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","ResetPasswordPage","_s","navigate","formData","setFormData","newPassword","confirmPassword","errors","setErrors","isFormValid","setIsFormValid","validateForm","newErrors","length","Object","keys","handleSubmit","e","preventDefault","handleChange","name","value","target","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","disabled","_c","$RefreshReg$"],"sources":["/Users/nikharvdomadiya/Downloads/untitled folder/PayPerks/frontend/src/pages/ResetPasswordPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../css/ResetPasswordPage.css';\n\nfunction ResetPasswordPage() {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    newPassword: '',\n    confirmPassword: '',\n  });\n  const [errors, setErrors] = useState({});\n  const [isFormValid, setIsFormValid] = useState(false);\n\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.newPassword) {\n      newErrors.newPassword = 'New password is required';\n    } else if (formData.newPassword.length < 6) {\n      newErrors.newPassword = 'Password must be at least 6 characters';\n    }\n\n    if (!formData.confirmPassword) {\n      newErrors.confirmPassword = 'Please confirm your password';\n    } else if (formData.newPassword !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Passwords do not match';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  useEffect(() => {\n    setIsFormValid(validateForm());\n  }, [formData]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n      // TODO: Add password reset logic here\n      navigate('/login');\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"card\">\n        <h1>Reset Password</h1>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              name=\"newPassword\"\n              placeholder=\"New Password\"\n              value={formData.newPassword}\n              onChange={handleChange}\n              className={errors.newPassword ? 'error' : ''}\n            />\n            {errors.newPassword && (\n              <div className=\"error-message\">{errors.newPassword}</div>\n            )}\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              name=\"confirmPassword\"\n              placeholder=\"Confirm New Password\"\n              value={formData.confirmPassword}\n              onChange={handleChange}\n              className={errors.confirmPassword ? 'error' : ''}\n            />\n            {errors.confirmPassword && (\n              <div className=\"error-message\">{errors.confirmPassword}</div>\n            )}\n          </div>\n\n          <button type=\"submit\" className=\"reset-password-button\" disabled={!isFormValid}>\n            Reset Password\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default ResetPasswordPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}